/*
 * This file is generated by jOOQ.
 */
package com.example.managestudentjooq.model.tables.records;


import com.example.managestudentjooq.model.tables.StudentSubject;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentSubjectRecord extends UpdatableRecordImpl<StudentSubjectRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>manage_students.student_subject.id</code>.
     */
    public StudentSubjectRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>manage_students.student_subject.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>manage_students.student_subject.student_id</code>.
     */
    public StudentSubjectRecord setStudentId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>manage_students.student_subject.student_id</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>manage_students.student_subject.subject_id</code>.
     */
    public StudentSubjectRecord setSubjectId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>manage_students.student_subject.subject_id</code>.
     */
    public Integer getSubjectId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>manage_students.student_subject.status</code>.
     */
    public StudentSubjectRecord setStatus(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>manage_students.student_subject.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return StudentSubject.STUDENT_SUBJECT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return StudentSubject.STUDENT_SUBJECT.STUDENT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return StudentSubject.STUDENT_SUBJECT.SUBJECT_ID;
    }

    @Override
    public Field<Integer> field4() {
        return StudentSubject.STUDENT_SUBJECT.STATUS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getStudentId();
    }

    @Override
    public Integer component3() {
        return getSubjectId();
    }

    @Override
    public Integer component4() {
        return getStatus();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getStudentId();
    }

    @Override
    public Integer value3() {
        return getSubjectId();
    }

    @Override
    public Integer value4() {
        return getStatus();
    }

    @Override
    public StudentSubjectRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StudentSubjectRecord value2(Integer value) {
        setStudentId(value);
        return this;
    }

    @Override
    public StudentSubjectRecord value3(Integer value) {
        setSubjectId(value);
        return this;
    }

    @Override
    public StudentSubjectRecord value4(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public StudentSubjectRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentSubjectRecord
     */
    public StudentSubjectRecord() {
        super(StudentSubject.STUDENT_SUBJECT);
    }

    /**
     * Create a detached, initialised StudentSubjectRecord
     */
    public StudentSubjectRecord(Integer id, Integer studentId, Integer subjectId, Integer status) {
        super(StudentSubject.STUDENT_SUBJECT);

        setId(id);
        setStudentId(studentId);
        setSubjectId(subjectId);
        setStatus(status);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised StudentSubjectRecord
     */
    public StudentSubjectRecord(com.example.managestudentjooq.model.tables.pojos.StudentSubject value) {
        super(StudentSubject.STUDENT_SUBJECT);

        if (value != null) {
            setId(value.getId());
            setStudentId(value.getStudentId());
            setSubjectId(value.getSubjectId());
            setStatus(value.getStatus());
            resetChangedOnNotNull();
        }
    }
}
